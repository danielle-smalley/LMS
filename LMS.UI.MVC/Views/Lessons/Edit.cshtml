@model LMS.DATA.EF.Lesson

@{
    ViewBag.Title = "Edit Lesson";
}
<div class="container">
    <br/>
<h2 class="text-center">@ViewBag.Title</h2>
    <br/>

@using (Html.BeginForm("Edit", "Lessons", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LessonId)
        @Html.HiddenFor(model => model.PdfFile)

        <div class="form-group">
            @Html.LabelFor(model => model.LessonTitle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LessonTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LessonTitle, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.CourseId, "CourseId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.LessonDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LessonDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LessonDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.VideoURL, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VideoURL, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.VideoURL, "", new { @class = "text-danger" })
            </div>
        </div>
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.PdfFile, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.PdfFile, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PdfFile, "", new { @class = "text-danger" })*@
                <input type="file"  name="pdfFile" />
            </div>
        </div>
        <br/>
        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <br/>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>

}

    <div>

        <p class="text-center">
            <a href="@Url.Action("Index", "Lessons")" class="btn btn-warning">Back to Lesson List</a>
        </p>
        <br/>
        @*@Html.ActionLink("Back to Lesson List", "Index")*@
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
